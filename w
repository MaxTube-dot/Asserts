–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã **OData –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–ª –≤—Å–µ —Å—É—â–Ω–æ—Å—Ç–∏ –∏–∑ `DbContext`**, —Ç–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **–¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é EDM-–º–æ–¥–µ–ª–∏** –Ω–∞ –æ—Å–Ω–æ–≤–µ EF Core. –í–æ—Ç –∫–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å:

---

## üî• **1. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π DbContext –≤ OData**
### **–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:**
- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è **EF Core** (–Ω–∞–ø—Ä–∏–º–µ—Ä, `AppDbContext`).
- –ù—É–∂–Ω–æ, —á—Ç–æ–±—ã –≤—Å–µ `DbSet<T>` —Å—Ç–∞–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ OData (`/odata/Products`, `/odata/Users` –∏ —Ç.–¥.).

### **–†–µ—à–µ–Ω–∏–µ:**
#### **1. –°–æ–∑–¥–∞–µ–º –º–µ—Ç–æ–¥ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ EDM-–º–æ–¥–µ–ª–∏ –∏–∑ DbContext**
```csharp
using Microsoft.EntityFrameworkCore;
using Microsoft.OData.Edm;
using Microsoft.OData.ModelBuilder;

public static IEdmModel GetEdmModelFromDbContext(IServiceProvider serviceProvider)
{
    var builder = new ODataConventionModelBuilder();
    
    // –ü–æ–ª—É—á–∞–µ–º DbContext
    using var scope = serviceProvider.CreateScope();
    var dbContext = scope.ServiceProvider.GetRequiredService<AppDbContext>();

    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ DbSet<T> –∫–∞–∫ EntitySet –≤ OData
    foreach (var entityType in dbContext.Model.GetEntityTypes())
    {
        var clrType = entityType.ClrType;
        builder.EntitySet(clrType, clrType.Name); // –ù–∞–ø—Ä–∏–º–µ—Ä, "Products" –¥–ª—è DbSet<Product>
    }

    return builder.GetEdmModel();
}
```

#### **2. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º OData –≤ `Program.cs`**
```csharp
var builder = WebApplication.CreateBuilder(args);

// –î–æ–±–∞–≤–ª—è–µ–º DbContext (EF Core)
builder.Services.AddDbContext<AppDbContext>(options => 
    options.UseSqlServer(builder.Configuration.GetConnectionString("DefaultConnection")));

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º OData —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π EDM-–º–æ–¥–µ–ª—å—é
builder.Services.AddControllers()
    .AddOData(options =>
    {
        options.EnableQueryFeatures();
        options.AddRouteComponents("odata", GetEdmModelFromDbContext(builder.Services.BuildServiceProvider()));
    });

var app = builder.Build();
```

---

## üî• **2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ OData-–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤**
–ß—Ç–æ–±—ã –Ω–µ –ø–∏—Å–∞—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã –≤—Ä—É—á–Ω—É—é –¥–ª—è –∫–∞–∂–¥–æ–π —Å—É—â–Ω–æ—Å—Ç–∏, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **–¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤**.

### **–í–∞—Ä–∏–∞–Ω—Ç A: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ `ODataController<T>` (–±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π)**
```csharp
[GenericODataController] // –ö–∞—Å—Ç–æ–º–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç
public class GenericODataController<T> : ODataController where T : class
{
    private readonly AppDbContext _db;

    public GenericODataController(AppDbContext db)
    {
        _db = db;
    }

    [EnableQuery]
    public IQueryable<T> Get()
    {
        return _db.Set<T>().AsQueryable();
    }
}
```

### **–í–∞—Ä–∏–∞–Ω—Ç B: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `Scaffold-DbContext` (–ø—Ä–æ—â–µ)**
1. **–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏**:
   ```bash
   dotnet add package Microsoft.AspNetCore.OData
   dotnet add package Microsoft.EntityFrameworkCore.Design
   Scaffold-DbContext "Server=...;Database=...;Trusted_Connection=True;" Microsoft.EntityFrameworkCore.SqlServer -OutputDir Models -Context AppDbContext -DataAnnotations -Force
   ```
2. **–î–æ–±–∞–≤—å—Ç–µ `[ODataRoute]` –∏ `[EnableQuery]`** –≤ –∫–∞–∂–¥—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä.

---

## üî• **3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏**
–ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:
1. **–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ**:  
   `GET /odata/$metadata` ‚Üí –î–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å **–≤—Å–µ —Å—É—â–Ω–æ—Å—Ç–∏ –∏–∑ DbContext**.
2. **–î–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º**:  
   `GET /odata/Products` ‚Üí –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤.  
   `GET /odata/Users?$filter=Name eq 'John'` ‚Üí –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç.

---

## ‚ö†Ô∏è **–í–∞–∂–Ω—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è**
1. **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å**:  
   - –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π **–º–æ–∂–µ—Ç –±—ã—Ç—å –æ–ø–∞—Å–Ω–æ** (—Ä–∏—Å–∫ —É—Ç–µ—á–∫–∏ –¥–∞–Ω–Ω—ã—Ö).  
   - –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è **–æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –¥–æ—Å—Ç—É–ø** —á–µ—Ä–µ–∑ –∞—Ç—Ä–∏–±—É—Ç—ã `[Authorize]`.

2. **–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å**:  
   - –ï—Å–ª–∏ —Å—É—â–Ω–æ—Å—Ç–µ–π –º–Ω–æ–≥–æ, EDM-–º–æ–¥–µ–ª—å –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å **–æ—á–µ–Ω—å –±–æ–ª—å—à–æ–π**.  
   - –ú–æ–∂–Ω–æ **–∫–µ—à–∏—Ä–æ–≤–∞—Ç—å** `IEdmModel`, —á—Ç–æ–±—ã –Ω–µ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –µ—ë –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—Ä–æ—Å–µ.

3. **–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤**:  
   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ `EnableQueryFeatures()` –≤–∫–ª—é—á–∞–µ—Ç –Ω—É–∂–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (`$filter`, `$orderby` –∏ —Ç.–¥.).

---

## üöÄ **–ò—Ç–æ–≥–æ–≤—ã–π –∫–æ–¥**
### **`Program.cs`**
```csharp
var builder = WebApplication.CreateBuilder(args);

// 1. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º DbContext
builder.Services.AddDbContext<AppDbContext>(options =>
    options.UseSqlServer(builder.Configuration.GetConnectionString("DefaultConnection")));

// 2. –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è OData-–º–æ–¥–µ–ª—å
builder.Services.AddControllers()
    .AddOData(options =>
    {
        options.EnableQueryFeatures(maxTop: 100);
        options.AddRouteComponents("odata", GetEdmModelFromDbContext(builder.Services.BuildServiceProvider()));
    });

var app = builder.Build();

app.UseRouting();
app.UseEndpoints(endpoints => endpoints.MapControllers());
app.Run();
```

### **`AppDbContext.cs`**
```csharp
public class AppDbContext : DbContext
{
    public DbSet<Product> Products { get; set; }
    public DbSet<User> Users { get; set; }
    // ... –¥—Ä—É–≥–∏–µ DbSet<T> ...
}
```

---

### **–ü—Ä–æ–≤–µ—Ä–∫–∞:**
1. **–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ**:  
   `http://localhost:5000/odata/$metadata` ‚Üí –î–æ–ª–∂–µ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –≤—Å–µ —Å—É—â–Ω–æ—Å—Ç–∏.  
2. **–î–∞–Ω–Ω—ã–µ**:  
   `http://localhost:5000/odata/Products` ‚Üí –°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤.  
   `http://localhost:5000/odata/Users?$select=Name` ‚Üí –ü—Ä–æ–µ–∫—Ü–∏—è.  

–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç ‚Äî –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:  
- **–ú–∏–≥—Ä–∞—Ü–∏–∏ EF Core** (`dotnet ef database update`),  
- **–õ–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞** (`docker logs <container>`),  
- **–ù–∞—Å—Ç—Ä–æ–π–∫–∏ CORS** (–µ—Å–ª–∏ Blazor WASM).  

–¢–µ–ø–µ—Ä—å –≤–∞—à OData –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç **–≤—Å–µ —Å—É—â–Ω–æ—Å—Ç–∏ –∏–∑ DbContext**! üéâ