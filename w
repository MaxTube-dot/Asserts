–î–∞, –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å **PostgREST** –∏–∑ **Angular** –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–¥—Ö–æ–¥—ã –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:

### 1. **HttpClient (–ù–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±)**
   –ü–æ—Å–∫–æ–ª—å–∫—É PostgREST –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç RESTful API, –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π `HttpClient` –∏–∑ Angular –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤.

   **–ü—Ä–∏–º–µ—Ä:**
   ```typescript
   import { HttpClient, HttpHeaders } from '@angular/common/http';
   import { Injectable } from '@angular/core';

   @Injectable({
     providedIn: 'root'
   })
   export class PostgrestService {
     private apiUrl = 'http://your-postgrest-server';

     constructor(private http: HttpClient) {}

     getData() {
       return this.http.get(`${this.apiUrl}/your_table`);
     }

     insertData(data: any) {
       return this.http.post(`${this.apiUrl}/your_table`, data);
     }

     updateData(id: number, data: any) {
       return this.http.patch(`${this.apiUrl}/your_table?id=eq.${id}`, data);
     }

     deleteData(id: number) {
       return this.http.delete(`${this.apiUrl}/your_table?id=eq.${id}`);
     }
   }
   ```

   **–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**
   - –ü–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –∑–∞–ø—Ä–æ—Å–∞–º–∏.
   - –ù–µ —Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.

### 2. **–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏**
   –ï—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –±–∏–±–ª–∏–æ—Ç–µ–∫, –∫–æ—Ç–æ—Ä—ã–µ —É–ø—Ä–æ—â–∞—é—Ç —Ä–∞–±–æ—Ç—É —Å PostgREST:

#### **a) `@supabase/supabase-js` (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)**
   Supabase –∏—Å–ø–æ–ª—å–∑—É–µ—Ç PostgREST –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —É–¥–æ–±–Ω—ã–π –∫–ª–∏–µ–Ω—Ç –¥–ª—è Angular.

   **–£—Å—Ç–∞–Ω–æ–≤–∫–∞:**
   ```bash
   npm install @supabase/supabase-js
   ```

   **–ü—Ä–∏–º–µ—Ä:**
   ```typescript
   import { createClient } from '@supabase/supabase-js';

   const supabase = createClient('https://your-project.supabase.co', 'your-anon-key');

   // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
   const { data, error } = await supabase
     .from('your_table')
     .select('*');

   // –í—Å—Ç–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
   const { data, error } = await supabase
     .from('your_table')
     .insert([{ name: 'John' }]);
   ```

   **–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**
   - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ TypeScript.
   - –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è (JWT).
   - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (Realtime API).

#### **b) `postgrest-js`**
   –≠—Ç–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç PostgREST –æ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π PostgREST.

   **–£—Å—Ç–∞–Ω–æ–≤–∫–∞:**
   ```bash
   npm install @supabase/postgrest-js
   ```

   **–ü—Ä–∏–º–µ—Ä:**
   ```typescript
   import { PostgrestClient } from '@supabase/postgrest-js';

   const client = new PostgrestClient('http://your-postgrest-server');

   const { data, error } = await client
     .from('your_table')
     .select('*');
   ```

   **–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**
   - –õ–µ–≥–∫–æ–≤–µ—Å–Ω—ã–π.
   - –ü—Ä—è–º–∞—è —Ä–∞–±–æ—Ç–∞ —Å PostgREST.

### 3. **GraphQL-–æ–±—ë—Ä—Ç–∫–∏ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)**
   –ï—Å–ª–∏ –≤–∞–º —É–¥–æ–±–Ω–µ–µ —Ä–∞–±–æ—Ç–∞—Ç—å —Å GraphQL, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
   - **Hasura** (–ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç PostgREST –≤ GraphQL).
   - **PostGraphile** (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç GraphQL API –∏–∑ PostgreSQL).

### **–í—ã–≤–æ–¥:**
- –ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–µ–Ω **–ø—Ä–æ—Å—Ç–æ–π –∏ –Ω–∞—Ç–∏–≤–Ω—ã–π** —Å–ø–æ—Å–æ–± ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `HttpClient`.
- –ï—Å–ª–∏ –Ω—É–∂–µ–Ω **—É–¥–æ–±–Ω—ã–π –∫–ª–∏–µ–Ω—Ç —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏** ‚Äî –≤—ã–±–∏—Ä–∞–π—Ç–µ `@supabase/supabase-js`.
- –ï—Å–ª–∏ –Ω—É–∂–µ–Ω **–º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –∫–ª–∏–µ–Ω—Ç PostgREST** ‚Äî `postgrest-js`.

–ö–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –≤–∞–º –±–æ–ª—å—à–µ –ø–æ–¥—Ö–æ–¥–∏—Ç? üòä